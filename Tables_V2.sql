--DROP SCHEMA IF EXISTS GP;
--CREATE SCHEMA GP;
--DROP TABLE IF EXISTS GP.Movies
--DROP TABLE IF EXISTS GP.Rating
--DROP TABLE IF EXISTS GP.Genre
--DROP TABLE IF EXISTS GP.[Language]
--DROP TABLE IF EXISTS GP.Director

CREATE TABLE GP.Movies
(
   MovieID INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,
   IMDBID INT NOT NULL,
   Title NVARCHAR(50) NOT NULL,
   Adult BIT NOT NULL,
   TagLine NVARCHAR(200) NOT NULL,
   Overview NVARCHAR(500) NOT NULL,
   ReleaseDate DATETIME2(0) NOT NULL,
   Runtime INT NOT NULL,
   GenreID INT NOT NULL,
   DirectorID INT NOT NULL,
   Budget INT NOT NULL,
   AverageVote INT NOT NULL,
   OriginalLanguage NVARCHAR(2) NOT NULL,
   DateCreated DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
   DateUpdated DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),

   UNIQUE
   (
      Title ASC,
	  IMDBID ASC,
	  GenreID ASC,
	  DirectorID ASC
   )
);
GO

CREATE TABLE GP.Rating
(
	RatingID INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,
	IMDBscore INT NOT NULL,
	VotesCount INT NOT NULL,
	MovieID INT NOT NULL FOREIGN KEY
		REFERENCES GP.Movies(MovieID),
	DateCreated DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
	DateUpdated DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())
);
GO

CREATE TABLE GP.Director
(
	MovieID INT NOT NULL FOREIGN KEY
		REFERENCES GP.Movies(MovieID),
	DirectorID INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,		
	FirstName NVARCHAR(20) NOT NULL,
	LastName NVARCHAR(20) NOT NULL,
	DateCreated DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
	DateUpdated DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())
);
GO

CREATE TABLE GP.Actor
(
	MovieID INT NOT NULL FOREIGN KEY
		REFERENCES GP.Movies(MovieID),
	ActorID INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,		
	FirstName NVARCHAR(20) NOT NULL,
	LastName NVARCHAR(20) NOT NULL,
	DateCreated DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
	DateUpdated DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())
);
GO

CREATE TABLE GP.Genre
(
	MovieID INT NOT NULL FOREIGN KEY
		REFERENCES GP.Movies(MovieID),
	GenreID INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,
	Genre NVARCHAR(15) NOT NULL,
	DateCreated DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
	DateUpdated DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())
);
GO

CREATE TABLE GP.Financial
(
	FinancialID INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,
	MovieID INT NOT NULL FOREIGN KEY
		REFERENCES GP.Movies(MovieID),
	Budget INT NOT NULL,
	Gross INT NOT NULL,
	DateCreated DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
	DateUpdated DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())
);
GO

CREATE TABLE GP.Region
(
	RegionID INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,
	MovieID INT NOT NULL FOREIGN KEY
		REFERENCES GP.Movies(MovieID),
	Country NVARCHAR(25) NOT NULL,
	Language NVARCHAR(25) NOT NULL,
	DateCreated DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
	DateUpdated DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())
);
GO

CREATE TABLE GP.AdditionalInfo
(
	InfoID INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,
	MovieID INT NOT NULL FOREIGN KEY
		REFERENCES GP.Movies(MovieID),
	MovieLink NVARCHAR(100) NOT NULL,
	AspectRatio NVARCHAR(10) NOT NULL,
	Color NVARCHAR (10) NOT NULL,
	DateCreated DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
	DateUpdated DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())

	UNIQUE
	(
		MovieLink ASC
	)
);
GO

